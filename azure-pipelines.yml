# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/JWTerritoryAPI.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    projects: '**/JWTerritoryAPI.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: Npm@1
  displayName: 'Restore Angular Dependencies'
  inputs:
    workingDir: 'JWTerritorySPA'
    command: install
    verbose: false

- task: PowerShell@1
  displayName: 'Rename Files'
  inputs:
    scriptType: inlineScript
    inlineScript: |
      $file =  (Get-Content -Path 'JWTerritorySPA/src/app/app-config-template.json')
      $file = $file -replace "##clientid##", "f2eca5f9-3cef-4140-a977-7ca4327239af"
      $file = $file -replace "##tenantid##", "3dfe3a5d-a0f4-4777-a104-8dec5cbc8495"
      $file = $file -replace "##app##", "mtkajw"
      $file = $file -replace "##service##", "minnetonkajwservice"
      $file = $file -replace "##scope##", "api://1af6b9f6-b4a5-4885-94f7-d4056a0ce214/FullAccess"
      $Utf8NoBomEncoding = New-Object System.Text.UTF8Encoding $False
      [System.IO.File]::WriteAllLines('JWTerritorySPA/src/app/app-config.json', $file, $Utf8NoBomEncoding)

- task: Npm@1
  displayName: 'Build Angular'
  inputs:
    command: custom
    customCommand: run build --prod
    workingDir: 'JWTerritorySPA'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'JWTerritorySPA/dist/jwterritory-spa'
    includeRootFolder: false 
    archiveType: 'zip' # Options: zip, 7z, tar, wim
    archiveFile: '$(Build.ArtifactStagingDirectory)/Spa$(Build.BuildId).zip' 
    replaceExistingArchive: false 
    #verbose: # Optional
    #quiet: # Optional

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: ArtifactProd
    targetPath: '$(Build.ArtifactStagingDirectory)'
